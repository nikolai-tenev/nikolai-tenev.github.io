{"version":3,"sources":["configuration/ui.js","service/BaseService.js","service/UiService.js","service/ApplicationService.js","service/BaseLocalStorageService.js","service/IncomeService.js","service/CostService.js","service/ApplicationContext.js","component/shared/Copyright.js","component/shared/AppLayout.js","configuration/application-urls.js","utility/formatting.js","component/DashboardPage.js","configuration/enums.js","component/shared/crud/CashFlowListPage.js","component/income/IncomeListPage.js","component/shared/button/SubmitButton.js","component/shared/button/BackToListButton.js","component/shared/button/BackToDashboardButton.js","component/shared/form/FormButtonContainer.js","component/shared/button/AddAnotherButton.js","component/shared/form/FormButtons.js","component/shared/form/input/TextField.js","component/shared/form/input/MoneyField.js","component/shared/form/input/RadioGroup.js","component/shared/form/input/Switch.js","component/shared/form/input/DatePicker.js","component/shared/crud/CashFlowForm.js","component/shared/crud/CashFlowCreatePage.js","configuration/validation-schemas.js","component/income/IncomeCreatePage.js","component/shared/Loading.js","component/shared/crud/CashFlowEditPage.js","component/income/IncomeEditPage.js","component/ui/SnackbarsContainer.js","component/ui/ConfirmationDialogsContainer.js","component/cost/CostListPage.js","component/cost/CostCreatePage.js","component/cost/CostEditPage.js","component/Application.js","index.js"],"names":["SNACKBAR_POSITION","vertical","horizontal","PAGINATION_ROWS_PER_PAGE_OPTIONS","BaseService","applicationContext","this","observable","action","loading","UiService","hideConfirmationDialog","id","hideAnimatedListedUiComponent","confirmationDialogs","removeConfirmationDialog","removeAnimatedListedUiComponent","showConfirmationDialog","confirmationDialog","showAnimatedListedUiComponent","drawerOpen","snackbars","snackbar","type","componentProps","componentList","push","open","uniqueId","toString","find","el","index","findIndex","splice","ApplicationService","BaseLocalStorageService","setSortingFunction","func","sortingFunction","loadAll","a","setLoading","allRecords","store","iterate","record","setAll","loadList","allItems","searchValue","sortField","sortDirection","currentPage","rowsPerPage","passedSearch","forOwn","val","stringValue","isNil","isMoment","toISOString","isString","toLowerCase","indexOf","sort","first","second","isAsc","left","right","totalCount","length","setTotalRows","setList","slice","loadSingle","getItem","item","setSingle","save","values","oldRecord","keys","setItem","delete","removeItem","totalRows","all","list","single","IncomeService","localforage","createInstance","name","CostService","applicationService","init","uiService","incomeService","costService","Copyright","Typography","variant","color","align","href","target","rel","Date","getFullYear","AppLayout","withStyles","theme","root","display","minHeight","toolbar","paddingLeft","paddingRight","justifyContent","toolbarLogo","width","height","borderRadius","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","backgroundColor","grey","appBarShift","enteringScreen","menuButton","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","mixins","content","container","padding","flexDirection","contentPaper","withRouter","observer","handleDrawerToggle","closeDrawer","openDrawer","props","classes","title","className","Drawer","paper","clsx","Toolbar","Divider","List","ListItem","button","component","Link","to","ListItemIcon","Dashboard","ListItemText","primary","ExposurePlus1","ExposureNeg1","AppBar","IconButton","aria-label","onClick","Menu","noWrap","Avatar","alt","src","Container","children","Box","pt","Component","currencyFormatter","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","style","currency","currencyFormat","number","n","isNaN","parseFloat","isFinite","format","dateFormat","date","moment","getSingleFinancialValueForYear","row","y","value","start","end","unitOfTime","valMultiplier","currentYearStart","currentYearEnd","clone","endOf","currentRowStart","from","currentRowEnd","now","isAfter","isBefore","getUnitOfTime","ongoing","Math","abs","startOf","diff","DashboardPage","costButton","deepOrange","incomeButton","green","futureYearsToDisplay","yearlyTotals","costs","incomes","i","year","add","get","Grid","Button","startIcon","Add","xs","TableContainer","Table","table","TableHead","TableRow","TableCell","map","key","TableBody","scope","colSpan","MAX_DASHBOARD_SHOWN_FUTURE_YEARS","currentIncome","currentCost","yearTotal","CashFlowTypes","ONE_TIME","label","DAILY","WEEKLY","MONTHLY","YEARLY","costTypeOrder","SortedTableHeader","service","fieldName","TableSortLabel","active","direction","setSortDirection","setSortField","CashFlowListPage","handleDeleteClick","onOk","showSuccessSnackbar","message","showErrorSnackbar","console","error","handleChangePage","event","page","setCurrentPage","handleChangeRowsPerPage","setRowsPerPage","createPageUrl","editPageUrl","hover","replace","Edit","Delete","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","IncomeListPage","SubmitButton","disabled","BackToListButton","url","GoToDashboardButton","dashboardButton","purple","FormButtonsContainer","buttons","marginTop","marginLeft","AddAnotherButton","addAnotherButton","marginRight","FormButtons","isSubmitting","listUrl","createUrl","BackToDashboardButton","TextFieldBridge","field","form","rest","errors","helperText","TextField","NumberFormatBridge","onChange","setFieldValue","floatValue","inputRef","prefix","thousandSeparator","decimalSeparator","getInputRef","onValueChange","isNumericString","MoneyFieldBridge","InputProps","inputComponent","inputProps","MoneyField","RadioGroupBridge","FormControl","FormLabel","FormHelperText","RadioGroup","SwitchBridge","control","Switch","DatePickerBridge","autoComplete","DatePicker","CashFlowForm","onSubmit","setSubmitting","preparedValues","handleSubmit","initialValues","validationSchema","isEmpty","Object","enableReinitialize","validateOnBlur","formValues","noValidate","md","autoFocus","required","entries","FormControlLabel","Radio","CashFlowCreatePage","history","editUrl","result","INCOME","Yup","shape","positive","when","schema","typeError","isValid","min","COST","IncomeCreatePage","LinearProgress","CashFlowEditPage","match","params","titlePrefix","Loading","IncomeEditPage","SnackbarsContainer","onClose","hideSnackbar","anchorOrigin","autoHideDuration","onExited","removeSnackbar","elevation","severity","ConfirmationDialogsContainer","dialog","aria-labelledby","aria-describedby","DialogContentText","CostListPage","CostCreatePage","CostEditPage","createMuiTheme","palette","blue","secondary","overrides","MuiFormControl","responsiveFontSizes","Application","ThemeProvider","utils","MomentUtils","CssBaseline","basename","process","exact","path","configure","enforceActions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44591523.chunk.js","sourcesContent":["export const APPLICATION_DRAWER_WIDTH = 240;\n\nexport const SNACKBAR_POSITION = {\n    vertical: 'bottom',\n    horizontal: 'left',\n};\n\nexport const SNACKBAR_DURATION = 2000;\n\nexport const PAGINATION_ROWS_PER_PAGE_OPTIONS = [10, 20, 50];\n\nexport const MAX_DASHBOARD_SHOWN_FUTURE_YEARS = 5;\n","import {action, observable} from \"mobx\";\n\nexport class BaseService {\n\n    /**\n     * Holds reference to the application context. Used to access other services, etc.\n     */\n    applicationContext;\n\n    /**\n     * Whether or not something is loading.\n     * @type {boolean}\n     */\n    @observable\n    loading = false;\n\n    constructor(applicationContext) {\n        this.applicationContext = applicationContext;\n    }\n\n    /**\n     * Constructors can't be async, so here we are...\n     * @returns {Promise<void>}\n     */\n    async init() {}\n\n    @action\n    setLoading = (loading) => {\n        this.loading = loading;\n    };\n}\n","import {action, observable} from \"mobx\";\nimport {BaseService} from \"./BaseService\";\nimport {uniqueId} from \"lodash/util\";\n\nexport class UiService extends BaseService {\n\n    @observable\n    drawerOpen = true;\n\n    @observable\n    snackbars = [];\n\n    @observable\n    confirmationDialogs = [];\n\n    @action\n    closeDrawer = () => {\n        this.drawerOpen = false\n    };\n\n    @action\n    openDrawer = () => {\n        this.drawerOpen = true\n    };\n\n    @action\n    hideSnackbar = (id) => {\n        this.hideAnimatedListedUiComponent(id, this.snackbars);\n    };\n\n    @action\n    removeSnackbar = (id) => {\n        this.removeAnimatedListedUiComponent(id, this.snackbars);\n    };\n\n    @action\n    showSuccessSnackbar = (snackbar) => {\n        this.showAnimatedListedUiComponent({...snackbar, type: \"success\"}, this.snackbars);\n    };\n\n    @action\n    showErrorSnackbar = (snackbar) => {\n        this.showAnimatedListedUiComponent({...snackbar, type: \"error\"}, this.snackbars);\n    };\n\n    hideConfirmationDialog = (id) => {\n        this.hideAnimatedListedUiComponent(id, this.confirmationDialogs);\n    };\n\n    removeConfirmationDialog = (id) => {\n        this.removeAnimatedListedUiComponent(id, this.confirmationDialogs);\n    };\n\n    showConfirmationDialog = (confirmationDialog) => {\n        this.showAnimatedListedUiComponent(confirmationDialog, this.confirmationDialogs);\n    };\n\n    @action\n    showAnimatedListedUiComponent = (componentProps, componentList) => {\n        componentList.push({\n            ...componentProps,\n            open: true,\n            id: uniqueId().toString()\n        });\n    };\n\n    @action\n    hideAnimatedListedUiComponent = (id, componentList) => {\n        const cmp = componentList.find((el) => {\n            return el.id === id;\n        });\n\n        cmp.open = false;\n    };\n\n    @action\n    removeAnimatedListedUiComponent = (id, componentList) => {\n        const index = componentList.findIndex((el) => {\n            return el.id !== id;\n        });\n\n        componentList.splice(index, 1);\n    };\n}\n","import {BaseService} from \"./BaseService\";\n\nexport class ApplicationService extends BaseService {\n\n}\n","import {action, observable} from \"mobx\";\nimport {BaseService} from \"./BaseService\";\nimport {PAGINATION_ROWS_PER_PAGE_OPTIONS} from \"../configuration/ui\";\nimport localforage from \"localforage\";\nimport {forOwn, isNil, isString} from \"lodash\";\nimport {isMoment} from \"moment\";\n\nexport class BaseLocalStorageService extends BaseService {\n\n    /**\n     * LocalForage instance. Created by implementing classes.\n     */\n    store;\n\n    /**\n     * How many rows per page will the table show.\n     * @type {number}\n     */\n    @observable\n    rowsPerPage = PAGINATION_ROWS_PER_PAGE_OPTIONS[0];\n\n    /**\n     * How many rows are there in total.\n     * @type {number}\n     */\n    @observable\n    totalRows = 0;\n\n    /**\n     * Zero-based index of the current shown page.\n     * @type {number}\n     */\n    @observable\n    currentPage = 0;\n\n    /**\n     * Value to search for in the records loaded in the CRUD list.\n     * @type {String}\n     */\n    @observable\n    searchValue;\n\n    /**\n     * Field on which the CRUD list is sorted.\n     * @type {String}\n     */\n    @observable\n    sortField;\n\n    /**\n     * Sort direction for the CRUD list.\n     * @type {String}\n     */\n    @observable\n    sortDirection;\n\n    /**\n     * Special sorting function. If nil, the default comparison operators will be used.\n     */\n    sortingFunction;\n\n    /**\n     * All items.\n     * @type {Array}\n     */\n    @observable\n    all = [];\n\n    /**\n     * List of items loaded in a CRUD list.\n     * @type {Array}\n     */\n    @observable\n    list = [];\n\n    /**\n     * Single item, used in create/edit forms.\n     * @type {{}}\n     */\n    @observable\n    single = {};\n\n    @action\n    setRowsPerPage = (rowsPerPage) => {\n        this.rowsPerPage = rowsPerPage;\n    };\n\n    @action\n    setTotalRows = (totalRows) => {\n        this.totalRows = totalRows;\n    };\n\n    @action\n    setCurrentPage = (currentPage) => {\n        this.currentPage = currentPage;\n    };\n\n    @action\n    setSortField = (sortField) => {\n        this.sortField = sortField;\n    };\n\n    @action\n    setSortDirection = (sortDirection) => {\n        this.sortDirection = sortDirection;\n    };\n\n    setSortingFunction = (func) => {\n        this.sortingFunction = func;\n    };\n\n    @action\n    setAll = (all) => {\n        this.all = all;\n    };\n\n    @action\n    setList = (list) => {\n        this.list = list;\n    };\n\n    @action\n    setSingle = (single) => {\n        this.single = single;\n    };\n\n    /**\n     * Load all items.\n     * @returns {Promise<void>}\n     */\n    loadAll = async () => {\n        this.setLoading(true);\n\n        try {\n            const allRecords = [];\n            await this.store.iterate((record) => {\n                allRecords.push(record);\n            });\n\n            this.setAll(allRecords);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    /**\n     * Load list of items. Takes into account pagination.\n     * @returns {Promise<void>}\n     */\n    loadList = async () => {\n        this.setLoading(true);\n\n        try {\n            const allItems = [];\n            const searchValue = this.searchValue;\n            const sortField = this.sortField;\n            const sortDirection = this.sortDirection;\n            const currentPage = this.currentPage;\n            const rowsPerPage = this.rowsPerPage;\n\n            await this.store.iterate((record, id) => {\n                let passedSearch = false;\n\n                forOwn(record, val => {\n                    if (isNil(val)) {\n                        return;\n                    }\n\n                    let stringValue;\n\n                    if (isMoment(val)) {\n                        stringValue = val.toISOString();\n                    }\n\n                    if (!isString(val)) {\n                        stringValue = val.toString();\n                    }\n\n                    if (!searchValue || stringValue.toLowerCase().indexOf(searchValue.toLowerCase()) > -1) {\n                        passedSearch = true;\n                    }\n                });\n\n                if (!passedSearch) {\n                    return;\n                }\n\n                allItems.push(record);\n            });\n\n            allItems.sort((first, second) => {\n                const isAsc = sortDirection === \"asc\";\n                const left = first[sortField];\n                const right = second[sortField];\n\n                if (isNil(left)) {\n                    return isAsc ? -1 : 1;\n                }\n\n                if (isNil(right)) {\n                    return isAsc ? 1 : -1;\n                }\n\n                if (!isNil(this.sortingFunction)) {\n                    return this.sortingFunction(first, second);\n                }\n\n                if (left < right) {\n                    return isAsc ? -1 : 1;\n                }\n                if (left > right) {\n                    return isAsc ? 1 : -1;\n                }\n\n                return 0;\n            });\n\n            let totalCount = allItems.length;\n\n            this.setTotalRows(totalCount);\n            this.setList(allItems.slice(currentPage * rowsPerPage, (currentPage + 1) * rowsPerPage));\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    /**\n     * Load single item by passed id.\n     * @param id\n     * @returns {Promise<void>}\n     */\n    loadSingle = async (id) => {\n        this.setLoading(true);\n\n        try {\n            const item = await this.store.getItem(id);\n\n            this.setSingle(item);\n        } finally {\n            this.setLoading(false);\n        }\n    };\n\n    /**\n     * Save (create or update) a single item.\n     * @param values\n     * @returns {Promise<any>}\n     */\n    save = async (values) => {\n        // this.setLoading(true);\n        let id = values.id;\n        let oldRecord = {};\n\n        try {\n            if (!id) {\n                const keys = await this.store.keys();\n\n                id = (keys.length + 1).toString();\n                oldRecord = {id};\n            } else {\n                oldRecord = await this.store.getItem(id);\n            }\n\n            return await this.store.setItem(id, {...oldRecord, ...values});\n        } finally {\n            // this.setLoading(false);\n        }\n    };\n\n    /**\n     * Delete a single item.\n     * @param id\n     * @returns {Promise<void>}\n     */\n    delete = async (id) => {\n        // this.setLoading(true);\n\n        try {\n            return await this.store.removeItem(id);\n        } finally {\n            // this.setLoading(false);\n        }\n    };\n}\n","import localforage from \"localforage\";\nimport {BaseLocalStorageService} from \"./BaseLocalStorageService\";\n\nexport class IncomeService extends BaseLocalStorageService {\n\n    /**\n     * Creates the datastore for the given resource.\n     * @param applicationContext\n     */\n    constructor(applicationContext) {\n        super(applicationContext);\n\n        this.store = localforage.createInstance({\n            name: \"income\"\n        });\n    }\n}\n","import localforage from \"localforage\";\nimport {BaseLocalStorageService} from \"./BaseLocalStorageService\";\n\nexport class CostService extends BaseLocalStorageService {\n\n    /**\n     * Creates the datastore for the given resource.\n     * @param applicationContext\n     */\n    constructor(applicationContext) {\n        super(applicationContext);\n\n        this.store = localforage.createInstance({\n            name: \"cost\"\n        });\n    }\n}\n","import {UiService} from \"./UiService\";\nimport {ApplicationService} from \"./ApplicationService\";\nimport {IncomeService} from \"./IncomeService\";\nimport {CostService} from \"./CostService\";\n\nclass ApplicationContext {\n\n    constructor() {\n        this.applicationService = new ApplicationService(this);\n        this.applicationService.init();\n\n        this.uiService = new UiService(this);\n        this.uiService.init();\n\n        this.incomeService = new IncomeService(this);\n        this.incomeService.init();\n\n        this.costService = new CostService(this);\n        this.costService.init();\n    }\n}\n\nconst applicationContext = new ApplicationContext();\n\nexport {applicationContext};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Copyright = () => (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Made with \\u2764 by '}<a href=\"https://digidworks.com\" target=\"_blank\" rel=\"noopener noreferrer\">DigidWorks</a>© {new Date().getFullYear()}{'.'}\n    </Typography>\n);\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {APPLICATION_DRAWER_WIDTH} from \"../../configuration/ui\";\nimport clsx from \"clsx\";\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Container from \"@material-ui/core/Container\";\nimport {Dashboard as DashboardIcon, ExposureNeg1, ExposurePlus1, Menu} from \"@material-ui/icons\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {COST_PAGE_URL, DASHBOARD_PAGE_URL, INCOME_PAGE_URL} from \"../../configuration/application-urls\";\nimport {observer} from \"mobx-react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Copyright} from \"./Copyright\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport {grey} from \"@material-ui/core/colors\";\n\nconst css = (theme) => ({\n    root: {\n        display: 'flex',\n        minHeight: '100vh',\n    },\n    toolbar: {\n        paddingLeft: 0,\n        paddingRight: 24,\n        justifyContent: \"space-between\"\n    },\n    toolbarLogo: {\n        width: \"150px\",\n        height: \"auto\",\n        borderRadius: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: \"#fff\",\n        color: grey[900]\n    },\n    appBarShift: {\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        color: grey[900]\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: APPLICATION_DRAWER_WIDTH,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        display: \"flex\",\n        width: \"100%\"\n    },\n    container: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing(4),\n        },\n    },\n    contentPaper: {\n        padding: theme.spacing(2),\n    }\n});\n\nconst uiService = applicationContext.uiService;\n\n@withRouter\n@withStyles(css)\n@observer\nclass AppLayout extends Component {\n    static propTypes = {\n        title: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {classes, title} = this.props;\n\n        return <div className={classes.root}>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !uiService.drawerOpen && classes.drawerPaperClose),\n                }}\n                open={uiService.drawerOpen}\n            >\n                <Toolbar/>\n                <Divider/>\n                <List>\n                    <ListItem button component={Link} to={DASHBOARD_PAGE_URL}>\n                        <ListItemIcon>\n                            <DashboardIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dashboard\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={INCOME_PAGE_URL}>\n                        <ListItemIcon>\n                            <ExposurePlus1/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Income\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={COST_PAGE_URL}>\n                        <ListItemIcon>\n                            <ExposureNeg1/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cost\"/>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <AppBar className={clsx(classes.appBar, uiService.drawerOpen && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            className={classes.menuButton}\n                            aria-label={uiService.drawerOpen ? \"close drawer\" : \"open drawer\"}\n                            onClick={this.handleDrawerToggle}>\n                            <Menu/>\n                        </IconButton>\n                        <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>{title}</Typography>\n                        <Avatar className={classes.toolbarLogo} alt=\"DigidWorks\" src=\"/digid-works-logo-trimmed.png\" component=\"a\" href=\"https://digidworks.com\"/>\n                    </Toolbar>\n                </AppBar>\n                <Container className={classes.container}>\n                    <div className={classes.appBarSpacer}/>\n                    <Paper className={classes.contentPaper}>\n                        {this.props.children}\n                    </Paper>\n                    <Box pt={4}>\n                        <Copyright/>\n                    </Box>\n                </Container>\n            </main>\n        </div>;\n    }\n\n    handleDrawerToggle = () => {\n        if (uiService.drawerOpen) {\n            uiService.closeDrawer();\n        } else {\n            uiService.openDrawer();\n        }\n    };\n}\n\nexport default AppLayout;\n","export const HOMEPAGE_URL = \"/\";\n\nexport const DASHBOARD_PAGE_URL = \"/dashboard\";\n\nexport const INCOME_PAGE_URL = \"/income\";\nexport const INCOME_EDIT_PAGE_URL = \"/income/:id\";\nexport const INCOME_CREATE_PAGE_URL = \"/income/create\";\n\nexport const COST_PAGE_URL = \"/cost\";\nexport const COST_EDIT_PAGE_URL = \"/cost/:id\";\nexport const COST_CREATE_PAGE_URL = \"/cost/create\";\n\nexport const DEFAULT_PAGE_URL = DASHBOARD_PAGE_URL;\n","import moment from \"moment\";\n\nconst currencyFormatter = new Intl.NumberFormat(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    style: 'currency',\n    currency: \"USD\",\n    // currencyDisplay: \"code\"\n});\n\nexport const isNumeric = (n) => {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nexport const currencyFormat = (number) => {\n    if (!isNumeric(number)) {\n        return number;\n    }\n\n    return currencyFormatter.format(number);\n};\n\nexport const dateFormat = (date) => {\n    return moment(date).format(\"DD.MM.YYYY\");\n};\n","import React, {Component} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppLayout from \"./shared/AppLayout\";\nimport Button from \"@material-ui/core/Button\";\nimport {Add} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport {COST_CREATE_PAGE_URL, INCOME_CREATE_PAGE_URL} from \"../configuration/application-urls\";\nimport {withStyles} from \"@material-ui/core\";\nimport green from \"@material-ui/core/colors/green\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport {applicationContext} from \"../service/ApplicationContext\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport moment from \"moment\";\nimport {MAX_DASHBOARD_SHOWN_FUTURE_YEARS} from \"../configuration/ui\";\nimport {observer} from \"mobx-react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {isNil} from \"lodash/lang\";\nimport {currencyFormat} from \"../utility/formatting\";\n\nconst css = (theme) => ({\n    costButton: {\n        color: \"#fff\",\n        backgroundColor: deepOrange[500],\n        '&:hover': {\n            backgroundColor: deepOrange[700],\n        }\n    },\n    incomeButton: {\n        color: \"#fff\",\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        }\n    },\n});\n\nconst incomeService = applicationContext.incomeService;\nconst costService = applicationContext.costService;\n\nconst getUnitOfTime = (type) => {\n    switch (type) {\n        case \"DAILY\":\n            return \"d\";\n        case \"WEEKLY\":\n            return \"w\";\n        case \"MONTHLY\":\n            return \"M\";\n        case \"YEARLY\":\n            return \"y\";\n        case \"ONE_TIME\":\n        default:\n            return null;\n    }\n};\n\nconst getSingleFinancialValueForYear = (row, y) => {\n    let value;\n\n    let currentYearStart = moment({y});\n    let currentYearEnd = currentYearStart.clone().endOf(\"y\");\n\n    let currentRowStart = moment(row.from);\n    let currentRowEnd = moment(row.to);\n\n    let now = moment();\n\n    if (!isNil(row.from) && !isNil(row.to) && (currentYearStart.isAfter(currentRowEnd) || currentYearEnd.isBefore(currentRowStart))) {\n        value = 0;\n    } else {\n        let start;\n        let end;\n        let unitOfTime;\n        let valMultiplier;\n\n        unitOfTime = getUnitOfTime(row.type);\n\n        if (unitOfTime === null) {\n            valMultiplier = 1;\n        } else {\n            if (row.ongoing) {\n                start = now.isAfter(currentYearStart) ? now : currentYearStart;\n                end = currentYearEnd;\n            } else {\n                if (currentRowStart.isBefore(currentYearStart)) {\n                    start = currentYearStart;\n                } else {\n                    start = currentRowStart;\n                }\n\n                if (currentRowEnd.isAfter(currentYearEnd)) {\n                    end = currentYearEnd;\n                } else {\n                    end = currentRowEnd;\n                }\n            }\n\n            valMultiplier = Math.abs(start.startOf(\"day\").diff(end.endOf(\"day\"), unitOfTime, true));\n        }\n\n        value = row.value * valMultiplier;\n    }\n\n    return value;\n};\n\n@withStyles(css)\n@observer\nclass DashboardPage extends Component {\n    componentDidMount() {\n        incomeService.loadAll();\n        costService.loadAll();\n    }\n\n    render() {\n        const {classes} = this.props;\n        const futureYearsToDisplay = [];\n        const yearlyTotals = {};\n\n        const costs = costService.all;\n        const incomes = incomeService.all;\n\n        for (let i = 0; i < MAX_DASHBOARD_SHOWN_FUTURE_YEARS; i++) {\n            const year = moment().add(i, \"y\").get(\"y\");\n            futureYearsToDisplay.push(year);\n            yearlyTotals[year] = 0;\n        }\n\n        return <AppLayout title=\"Dashboard\">\n            <Grid container spacing={3}>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.costButton}\n                        startIcon={<Add/>}\n                        component={Link}\n                        to={COST_CREATE_PAGE_URL}\n                    >\n                        Add a Cost\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.incomeButton}\n                        startIcon={<Add/>}\n                        component={Link}\n                        to={INCOME_CREATE_PAGE_URL}\n                    >\n                        Add an Income\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <TableContainer>\n                        <Table className={classes.table} aria-label=\"Financial Projections\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"h6\">Financial Projections</Typography>\n                                    </TableCell>\n                                    {futureYearsToDisplay.map(y => <TableCell key={y} align=\"right\">{y}</TableCell>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\" colSpan={MAX_DASHBOARD_SHOWN_FUTURE_YEARS + 1}>\n                                        <Typography variant=\"h6\">Income</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                {!!incomes && incomes.map((row) => (\n                                    <TableRow key={`i-${row.id}`}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography>{row.name}</Typography>\n                                        </TableCell>\n                                        {futureYearsToDisplay.map(y => {\n                                            const currentIncome = getSingleFinancialValueForYear(row, y);\n\n                                            yearlyTotals[y] = yearlyTotals[y] + currentIncome;\n\n                                            return <TableCell key={y} align=\"right\">\n                                                <Typography>{currencyFormat(currentIncome)}</Typography>\n                                            </TableCell>;\n                                        })}\n                                    </TableRow>\n                                ))}\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\" colSpan={MAX_DASHBOARD_SHOWN_FUTURE_YEARS + 1}>\n                                        <Typography variant=\"h6\">Costs</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                {!!costs && costs.map((row) => (\n                                    <TableRow key={`c-${row.id}`}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <Typography>{row.name}</Typography>\n                                        </TableCell>\n                                        {futureYearsToDisplay.map(y => {\n                                            const currentCost = getSingleFinancialValueForYear(row, y);\n\n                                            yearlyTotals[y] = yearlyTotals[y] - currentCost;\n\n                                            return <TableCell key={y} align=\"right\">\n                                                <Typography>{currencyFormat(currentCost)}</Typography>\n                                            </TableCell>;\n                                        })}\n                                    </TableRow>\n                                ))}\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Typography variant=\"h6\">Net Profit</Typography>\n                                    </TableCell>\n                                    {futureYearsToDisplay.map(y => {\n                                        const yearTotal = yearlyTotals[y];\n\n                                        return <TableCell key={y} align=\"right\">\n                                            <Typography color={yearTotal < 0 ? \"secondary\" : \"textPrimary\"}>{currencyFormat(yearTotal)}</Typography>\n                                        </TableCell>\n                                    })}\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        </AppLayout>;\n    }\n}\n\nexport default DashboardPage;\n","export const CashFlowTypes = {\n    ONE_TIME: {\n        id: \"ONE_TIME\",\n        label: \"One time\"\n    },\n    DAILY: {\n        id: \"DAILY\",\n        label: \"Daily\"\n    },\n    WEEKLY: {\n        id: \"WEEKLY\",\n        label: \"Weekly\"\n    },\n    MONTHLY: {\n        id: \"MONTHLY\",\n        label: \"Monthly\"\n    },\n    YEARLY: {\n        id: \"YEARLY\",\n        label: \"Yearly\"\n    },\n};\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {observer} from \"mobx-react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Add, Delete, Edit} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {applicationContext} from \"../../../service/ApplicationContext\";\nimport AppLayout from \"../AppLayout\";\nimport {CashFlowTypes} from \"../../../configuration/enums\";\nimport {currencyFormat, dateFormat} from \"../../../utility/formatting\";\nimport {PAGINATION_ROWS_PER_PAGE_OPTIONS} from \"../../../configuration/ui\";\n\nconst uiService = applicationContext.uiService;\nconst costTypeOrder = [\"ONE_TIME\", \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\"];\n\n@observer\nclass SortedTableHeader extends Component {\n    static propTypes = {\n        service: PropTypes.object.isRequired,\n        fieldName: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {service, fieldName, title} = this.props;\n        const {sortField, sortDirection} = service;\n\n        return <TableCell sortDirection={sortField === fieldName ? sortDirection : false}>\n            <TableSortLabel\n                active={sortField === fieldName}\n                direction={sortField === fieldName ? sortDirection : \"asc\"}\n                onClick={() => {\n                    service.setSortDirection(service.sortDirection === \"asc\" ? \"desc\" : \"asc\");\n                    service.setSortField(fieldName);\n\n                    if (fieldName === \"type\") {\n                        service.setSortingFunction((first, second) => {\n                            let left = costTypeOrder.indexOf(first.type);\n                            let right = costTypeOrder.indexOf(second.type);\n\n                            return service.sortDirection === \"asc\" ? left - right : right - left;\n                        });\n                    } else {\n                        service.setSortingFunction(null);\n                    }\n\n                    service.loadList();\n                }}\n            >\n                {title}\n            </TableSortLabel>\n        </TableCell>;\n    }\n}\n\n@observer\nclass CashFlowListPage extends Component {\n    static propTypes = {\n        service: PropTypes.object.isRequired,\n        title: PropTypes.string.isRequired,\n        createPageUrl: PropTypes.string.isRequired,\n        editPageUrl: PropTypes.string.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.service.loadList();\n    }\n\n    render() {\n        const {service, title, createPageUrl, editPageUrl} = this.props;\n        const {list} = service;\n\n        return <AppLayout title={title}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Add/>}\n                component={Link}\n                to={createPageUrl}\n            >\n                Add new\n            </Button>\n            <TableContainer>\n                <Table aria-label={title}>\n                    <TableHead>\n                        <TableRow>\n                            <SortedTableHeader service={service} title=\"Name\" fieldName=\"name\"/>\n                            <SortedTableHeader service={service} title=\"Type\" fieldName=\"type\"/>\n                            <SortedTableHeader service={service} title=\"Value\" fieldName=\"value\"/>\n                            <SortedTableHeader service={service} title=\"Period\" fieldName=\"from\"/>\n                            <TableCell align=\"center\">Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {list.map((row) => (\n                            <TableRow key={row.id} hover>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {CashFlowTypes[row.type].label}\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {currencyFormat(row.value)}\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.ongoing ? \"Ongoing\" : `${dateFormat(row.from)} - ${dateFormat(row.to)}`}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <IconButton\n                                        component={Link}\n                                        to={editPageUrl.replace(\":id\", row.id)}\n                                        aria-label=\"edit\"\n                                        color=\"primary\">\n                                        <Edit/>\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => this.handleDeleteClick(row.id)}\n                                        aria-label=\"delete\"\n                                        color=\"secondary\">\n                                        <Delete/>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={PAGINATION_ROWS_PER_PAGE_OPTIONS}\n                component=\"div\"\n                count={service.totalRows}\n                rowsPerPage={service.rowsPerPage}\n                page={service.currentPage}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n        </AppLayout>;\n    }\n\n    handleDeleteClick = async (id) => {\n        uiService.showConfirmationDialog({\n            title: \"Delete Confirmation\",\n            content: \"Are you sure you want to delete this record?\",\n            onOk: async () => {\n                try {\n                    await this.props.service.delete(id);\n                    uiService.showSuccessSnackbar({message: \"Record successfully deleted!\"});\n                } catch (e) {\n                    uiService.showErrorSnackbar({message: \"There was a problem while trying to delete record!\"});\n                    console.error(e);\n                }\n\n                this.props.service.loadList();\n            }\n        });\n    };\n\n    handleChangePage = (event, page) => {\n        this.props.service.setCurrentPage(page);\n        this.props.service.loadList();\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.props.service.setRowsPerPage(event.target.value);\n        this.props.service.loadList();\n    };\n}\n\nexport default CashFlowListPage;\n","import React from 'react';\nimport {INCOME_CREATE_PAGE_URL, INCOME_EDIT_PAGE_URL} from \"../../configuration/application-urls\";\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport CashFlowListPage from \"../shared/crud/CashFlowListPage\";\n\nconst service = applicationContext.incomeService;\n\nconst IncomeListPage = () => {\n    return <CashFlowListPage service={service} title=\"All income sources\" createPageUrl={INCOME_CREATE_PAGE_URL} editPageUrl={INCOME_EDIT_PAGE_URL}/>;\n};\n\nexport default IncomeListPage;\n","import Button from \"@material-ui/core/Button\";\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass SubmitButton extends Component {\n    static propTypes = {\n        disabled: PropTypes.bool\n    };\n\n    render() {\n        const {disabled} = this.props;\n\n        return <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={disabled}\n        >\n            Save\n        </Button>;\n    }\n}\n\nexport default SubmitButton;\n","import {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BackToListButton = (props) => (\n    <Button\n        variant=\"contained\"\n        component={Link}\n        to={props.url}\n        disabled={props.disabled}\n    >\n        Cancel\n    </Button>\n);\n\nBackToListButton.propTypes = {\n    disabled: PropTypes.bool,\n    url: PropTypes.string.isRequired\n};\n\nexport default BackToListButton;\n","import {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {DASHBOARD_PAGE_URL} from \"../../../configuration/application-urls\";\nimport {withStyles} from \"@material-ui/core\";\nimport {purple} from \"@material-ui/core/colors\";\n\nconst css = () => ({\n    dashboardButton: {\n        color: \"#fff\",\n        backgroundColor: purple[900],\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    }\n});\n\n@withStyles(css)\nclass GoToDashboardButton extends Component {\n    static propTypes = {\n        disabled: PropTypes.bool\n    };\n\n    render() {\n        const {classes, disabled} = this.props;\n\n        return <Button\n            className={classes.dashboardButton}\n            variant=\"contained\"\n            component={Link}\n            to={DASHBOARD_PAGE_URL}\n            disabled={disabled}\n        >\n            Go to the dashboard\n        </Button>;\n    }\n}\n\n\nexport default GoToDashboardButton;\n","import React, {Component} from \"react\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst css = (theme) => ({\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(3),\n        \"& > *\": {\n            marginLeft: theme.spacing(1),\n        }\n    }\n});\n\n@withStyles(css)\nclass FormButtonsContainer extends Component {\n    render() {\n        const {classes, children} = this.props;\n\n        return <div className={classes.buttons}>{children}</div>;\n    }\n}\n\nexport default FormButtonsContainer;\n","import {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {green} from \"@material-ui/core/colors\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst css = () => ({\n    addAnotherButton: {\n        marginRight: \"auto\",\n        color: \"#fff\",\n        backgroundColor: green[600],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    }\n});\n\n@withStyles(css)\nclass AddAnotherButton extends Component {\n    static propTypes = {\n        disabled: PropTypes.bool,\n        url: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {url, disabled, classes} = this.props;\n\n        return <Button\n            className={classes.addAnotherButton}\n            variant=\"contained\"\n            component={Link}\n            to={url}\n            disabled={disabled}\n        >\n            Add another\n        </Button>;\n    }\n}\n\nexport default AddAnotherButton;\n","import SubmitButton from \"../button/SubmitButton\";\nimport BackToListButton from \"../button/BackToListButton\";\nimport BackToDashboardButton from \"../button/BackToDashboardButton\";\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormButtonsContainer from \"./FormButtonContainer\";\nimport AddAnotherButton from \"../button/AddAnotherButton\";\n\nclass FormButtons extends Component {\n    static propTypes = {\n        isSubmitting: PropTypes.bool.isRequired,\n        listUrl: PropTypes.string.isRequired,\n        createUrl: PropTypes.string\n    };\n\n    render() {\n        const {isSubmitting, listUrl, createUrl} = this.props;\n\n        return <FormButtonsContainer>\n            {createUrl && <AddAnotherButton url={createUrl} disabled={isSubmitting}/>}\n            <SubmitButton disabled={isSubmitting}/>\n            <BackToListButton disabled={isSubmitting} url={listUrl}/>\n            <BackToDashboardButton disabled={isSubmitting}/>\n        </FormButtonsContainer>;\n    }\n}\n\nexport default FormButtons;\n","import MuiTextField from \"@material-ui/core/TextField/TextField\";\nimport {Field} from \"formik\";\nimport React from \"react\";\n\nconst TextFieldBridge = ({field, form, ...rest}) => {\n    const error = form.errors[field.name];\n\n    return <MuiTextField\n        {...rest}\n        {...field}\n        error={!!error}\n        helperText={!!error ? error : undefined}\n    />\n};\n\nexport const TextField = (props) => <Field {...props} component={TextFieldBridge}/>;\n","import React, {Component} from \"react\";\nimport {Field} from \"formik\";\nimport NumberFormat from 'react-number-format';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass NumberFormatBridge extends Component {\n    render() {\n        const {field, form, inputRef, onChange, ...rest} = this.props;\n\n        return (\n            <NumberFormat\n                prefix=\"$\"\n                thousandSeparator=\" \"\n                decimalSeparator=\".\"\n                {...rest}\n                getInputRef={inputRef}\n                onValueChange={this.onChange}\n                isNumericString\n            />\n        );\n    }\n\n    onChange = (values) => {\n        this.props.form.setFieldValue(this.props.field.name, values.floatValue);\n    }\n}\n\nconst MoneyFieldBridge = ({field, form, ...rest}) => {\n    const error = form.errors[field.name];\n\n    return <TextField\n        {...rest}\n        {...field}\n        InputProps={{\n            inputComponent: NumberFormatBridge\n        }}\n        inputProps={{\n            field,\n            form,\n            ...rest\n        }}\n        error={!!error}\n        helperText={!!error ? error : undefined}\n    />;\n};\n\nexport const MoneyField = (props) => <Field {...props} component={MoneyFieldBridge}/>;\n\n\n","import FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport MuiRadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport {Field} from \"formik\";\nimport React from \"react\";\n\nconst RadioGroupBridge = ({field, form, ...rest}) => {\n    const error = form.errors[field.name];\n\n    return <FormControl component=\"fieldset\" error={!!error}>\n        <FormLabel component=\"legend\">{rest.label}</FormLabel>\n        <MuiRadioGroup aria-label={rest.label} {...rest} {...field} />\n        {!!error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n};\n\nexport const RadioGroup = (props) => <Field {...props} component={RadioGroupBridge}/>;\n","import FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport MuiSwitch from \"@material-ui/core/Switch/Switch\";\nimport {Field} from \"formik\";\nimport React from \"react\";\n\nconst SwitchBridge = ({field, form, ...rest}) => {\n    return <FormControlLabel\n        control={<MuiSwitch {...field}/>}\n        {...rest}\n    />\n};\n\nexport const Switch = (props) => <Field {...props} type=\"checkbox\" component={SwitchBridge}/>;\n","import React, {Component} from \"react\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {Field} from \"formik\";\n\nclass DatePickerBridge extends Component {\n    render() {\n        const {field, form, ...rest} = this.props;\n        const error = form.errors[field.name];\n\n        return <KeyboardDatePicker\n            format=\"DD.MM.YYYY\"\n            {...rest}\n            {...field}\n            onChange={this.onChange}\n            error={!!error}\n            helperText={!!error ? error : undefined}\n            autoComplete=\"off\"\n        />;\n    }\n\n    onChange = (value) => {\n        this.props.form.setFieldValue(this.props.field.name, value);\n    }\n}\n\nexport const DatePicker = (props) => <Field {...props} component={DatePickerBridge}/>;\n","import React, {Component} from 'react';\nimport {PropTypes} from \"prop-types\";\nimport {Form, Formik} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {isEmpty} from \"lodash\";\nimport FormButtons from \"../form/FormButtons\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport {CashFlowTypes} from \"../../../configuration/enums\";\nimport moment from \"moment\";\nimport {TextField} from \"../form/input/TextField\";\nimport {MoneyField} from \"../form/input/MoneyField\";\nimport {RadioGroup} from \"../form/input/RadioGroup\";\nimport {Switch} from \"../form/input/Switch\";\nimport {DatePicker} from \"../form/input/DatePicker\";\nimport {observer} from \"mobx-react\";\n\n@observer\nclass CashFlowForm extends Component {\n    static propTypes = {\n        values: PropTypes.object,\n        validationSchema: PropTypes.object.isRequired,\n        handleSubmit: PropTypes.func.isRequired,\n        listUrl: PropTypes.string.isRequired,\n        createUrl: PropTypes.string,\n    };\n\n    render() {\n        const {values, validationSchema, listUrl, createUrl} = this.props;\n\n        let initialValues;\n\n        if (!isEmpty(values)) {\n            initialValues = {...values};\n\n            initialValues.from = moment(initialValues.from);\n            initialValues.to = moment(initialValues.to);\n        } else {\n            initialValues = {name: \"\", type: Object.keys(CashFlowTypes)[0], ongoing: false, from: moment(), to: moment(), value: 0};\n        }\n\n        return <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={this.onSubmit}\n            enableReinitialize={true}\n            validateOnBlur={false}\n        >\n            {({isSubmitting, values: formValues}) => (\n                <Form noValidate>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                label=\"Name\"\n                                name=\"name\"\n                                autoFocus\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <MoneyField\n                                label=\"Value\"\n                                name=\"value\"\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <RadioGroup\n                                row\n                                label=\"Type\"\n                                name=\"type\"\n                                required\n                            >\n                                {\n                                    Object.entries(CashFlowTypes).map(([key, value]) => <FormControlLabel key={key} value={key} control={<Radio/>} label={value.label}/>)\n                                }\n                            </RadioGroup>\n                        </Grid>\n                        {formValues && formValues[\"type\"] !== CashFlowTypes.ONE_TIME.id &&\n                        <>\n                            <Grid item xs={12} md={4}>\n                                <Switch\n                                    name=\"ongoing\"\n                                    label=\"Ongoing\"\n                                />\n                            </Grid>\n                            {formValues && !formValues[\"ongoing\"] &&\n                            <>\n                                <Grid item xs={12} md={4}>\n                                    <DatePicker\n                                        label=\"From\"\n                                        name=\"from\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <DatePicker\n                                        label=\"To\"\n                                        name=\"to\"\n                                    />\n                                </Grid>\n                            </>}\n                        </>}\n                    </Grid>\n                    <FormButtons isSubmitting={isSubmitting} listUrl={listUrl} createUrl={createUrl}/>\n                </Form>\n            )}\n        </Formik>;\n    }\n\n    onSubmit = (values, {setSubmitting}) => {\n\n        const preparedValues = {...values,};\n\n        if (preparedValues.type === CashFlowTypes.ONE_TIME.id) {\n            preparedValues.ongoing = false;\n            preparedValues.from = moment();\n            preparedValues.to = moment();\n        }\n\n        if (!preparedValues.ongoing) {\n            preparedValues.from = !!preparedValues.from ? preparedValues.from.toISOString() : preparedValues.from;\n            preparedValues.to = !!preparedValues.to ? preparedValues.to.toISOString() : preparedValues.to;\n        } else {\n            delete preparedValues.from;\n            delete preparedValues.to;\n        }\n\n        this.props.handleSubmit(preparedValues, {setSubmitting});\n    };\n}\n\nexport default CashFlowForm;\n","import React, {Component} from 'react';\nimport AppLayout from \"../../shared/AppLayout\";\nimport {applicationContext} from \"../../../service/ApplicationContext\";\nimport {withRouter} from \"react-router-dom\";\nimport CashFlowForm from \"./CashFlowForm\";\nimport {PropTypes} from \"prop-types\";\nimport {observer} from \"mobx-react\";\n\nconst uiService = applicationContext.uiService;\n\n@withRouter\n@observer\nclass CashFlowCreatePage extends Component {\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        service: PropTypes.object.isRequired,\n        validationSchema: PropTypes.object.isRequired,\n        listUrl: PropTypes.string.isRequired,\n        editUrl: PropTypes.string.isRequired,\n    };\n\n    render() {\n        const {title, validationSchema, listUrl} = this.props;\n\n        return <AppLayout title={title}>\n            <CashFlowForm\n                validationSchema={validationSchema}\n                listUrl={listUrl}\n                handleSubmit={this.handleSubmit}\n            />\n        </AppLayout>;\n    }\n\n    handleSubmit = async (values, {setSubmitting}) => {\n        const {service, history, editUrl} = this.props;\n\n        try {\n            const result = await service.save(values);\n\n            uiService.showSuccessSnackbar({message: \"Record successfully created!\"});\n            history.push(editUrl.replace(\":id\", result.id));\n        } catch (e) {\n            setSubmitting(false);\n            uiService.showErrorSnackbar({message: \"There was a problem while trying to create record!\"});\n            console.error(e);\n        }\n    };\n}\n\nexport default CashFlowCreatePage;\n","import * as Yup from \"yup\";\nimport moment from \"moment\";\n\nexport const INCOME = Yup.object().shape({\n    name: Yup.string().required(\"Required!\"),\n    value: Yup.number().positive(\"Value must be greater than 0!\").required(\"Required!\"),\n    type: Yup.string().required(\"Required!\"),\n    ongoing: Yup.boolean(),\n    from: Yup.mixed()\n        .when(\"ongoing\", (ongoing, schema) => {\n            if (ongoing !== false) {\n                return schema;\n            }\n\n            return Yup.date()\n                .typeError(\"From must be a valid date!\")\n                .required(\"Required!\");\n        }),\n    to: Yup.mixed()\n        .when([\"ongoing\", \"from\"], (ongoing, from, schema) => {\n            if (ongoing !== false || !moment(from).isValid()) {\n                return schema;\n            }\n\n            return Yup.date()\n                .typeError(\"To must be a valid date!\")\n                .min(from, \"The To date must be after the From date\");\n        })\n});\n\nexport const COST = INCOME;\n","import React, {Component} from 'react';\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport {INCOME_EDIT_PAGE_URL, INCOME_PAGE_URL} from \"../../configuration/application-urls\";\nimport {withRouter} from \"react-router-dom\";\nimport CashFlowCreatePage from \"../shared/crud/CashFlowCreatePage\";\nimport {INCOME} from \"../../configuration/validation-schemas\";\n\nconst service = applicationContext.incomeService;\n\n@withRouter\nclass IncomeCreatePage extends Component {\n    render() {\n        return <CashFlowCreatePage title=\"Add an income\" service={service} validationSchema={INCOME} listUrl={INCOME_PAGE_URL} editUrl={INCOME_EDIT_PAGE_URL}/>\n    }\n}\n\nexport default IncomeCreatePage;\n","import React from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport default () => (<LinearProgress/>);\n","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport AppLayout from \"../../shared/AppLayout\";\nimport {applicationContext} from \"../../../service/ApplicationContext\";\nimport {withRouter} from \"react-router-dom\";\nimport Loading from \"../../shared/Loading\";\nimport CashFlowForm from \"../../shared/crud/CashFlowForm\";\nimport {PropTypes} from \"prop-types\";\n\nconst uiService = applicationContext.uiService;\n\n@withRouter\n@observer\nclass CashFlowEditPage extends Component {\n    static propTypes = {\n        titlePrefix: PropTypes.string.isRequired,\n        service: PropTypes.object.isRequired,\n        validationSchema: PropTypes.object.isRequired,\n        listUrl: PropTypes.string.isRequired,\n        createUrl: PropTypes.string.isRequired,\n    };\n\n    componentDidMount() {\n        const {service, match, history, listUrl} = this.props;\n\n        if (match && match.params && match.params.id) {\n            const id = match.params.id;\n            service.loadSingle(id);\n        } else {\n            history.push(listUrl);\n        }\n    }\n\n    render() {\n        const {service, validationSchema, listUrl, createUrl, titlePrefix} = this.props;\n\n        if (service.loading) {\n            return <Loading/>;\n        }\n\n        return <AppLayout title={`${titlePrefix} \"${service.single.name}\"`}>\n            <CashFlowForm\n                listUrl={listUrl}\n                createUrl={createUrl}\n                validationSchema={validationSchema}\n                values={service.single}\n                handleSubmit={this.handleSubmit}\n            />\n        </AppLayout>;\n    }\n\n    handleSubmit = async (values, {setSubmitting}) => {\n        const {service} = this.props;\n\n        try {\n            await service.save({...values, id: this.props.match.params.id});\n            uiService.showSuccessSnackbar({message: \"Record successfully updated!\"});\n        } catch (e) {\n            uiService.showErrorSnackbar({message: \"There was a problem while trying to update record!\"});\n            console.error(e);\n        } finally {\n            setSubmitting(false);\n        }\n    };\n}\n\nexport default CashFlowEditPage;\n","import React, {Component} from 'react';\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport {INCOME_CREATE_PAGE_URL, INCOME_PAGE_URL} from \"../../configuration/application-urls\";\nimport CashFlowEditPage from \"../shared/crud/CashFlowEditPage\";\nimport {INCOME} from \"../../configuration/validation-schemas\";\n\nconst service = applicationContext.incomeService;\n\nclass IncomeEditPage extends Component {\n    render() {\n        return <CashFlowEditPage service={service} titlePrefix=\"Income\" validationSchema={INCOME} listUrl={INCOME_PAGE_URL} createUrl={INCOME_CREATE_PAGE_URL}/>;\n    }\n}\n\nexport default IncomeEditPage;\n","import Box from \"@material-ui/core/Box\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport {SNACKBAR_DURATION, SNACKBAR_POSITION} from \"../../configuration/ui\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport React, {Component} from \"react\";\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport {observer} from \"mobx-react\";\n\nconst uiService = applicationContext.uiService;\n\n@observer\nclass SnackbarsContainer extends Component {\n    render() {\n        return <Box>\n            {uiService.snackbars.map(snackbar => {\n                const onExited = () => uiService.removeSnackbar(snackbar.id);\n                const onClose = () => uiService.hideSnackbar(snackbar.id);\n\n                return <Snackbar\n                    key={snackbar.id}\n                    anchorOrigin={SNACKBAR_POSITION}\n                    open={snackbar.open}\n                    autoHideDuration={SNACKBAR_DURATION}\n                    onClose={onClose}\n                    onExited={onExited}\n                >\n                    <Alert elevation={6} variant=\"filled\" onClose={onClose} severity={snackbar.type}>\n                        {snackbar.message}\n                    </Alert>\n                </Snackbar>\n            })}\n        </Box>\n    }\n}\n\nexport default SnackbarsContainer;\n","import Box from \"@material-ui/core/Box\";\nimport React, {Component} from \"react\";\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport {observer} from \"mobx-react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\n\nconst uiService = applicationContext.uiService;\n\n@observer\nclass ConfirmationDialogsContainer extends Component {\n    render() {\n        return <Box>\n            {uiService.confirmationDialogs.map(dialog => {\n                const onExited = () => uiService.removeConfirmationDialog(dialog.id);\n                const onClose = () => uiService.hideConfirmationDialog(dialog.id);\n\n                const onOk = () => {\n                    dialog.onOk();\n\n                    onClose();\n                };\n\n                return <Dialog\n                    key={dialog.id}\n                    open={dialog.open}\n                    onClose={onClose}\n                    onExited={onExited}\n                    aria-labelledby={`alert-dialog-title-${dialog.id}`}\n                    aria-describedby={`alert-dialog-description-${dialog.id}`}\n                >\n                    <DialogTitle id={`alert-dialog-title-${dialog.id}`}>{dialog.title}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id={`alert-dialog-description-${dialog.id}`}>{dialog.content}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={onOk} color=\"primary\">Yes</Button>\n                        <Button onClick={onClose} color=\"primary\" autoFocus>No</Button>\n                    </DialogActions>\n                </Dialog>\n            })}\n        </Box>\n    }\n}\n\nexport default ConfirmationDialogsContainer;\n","import React from 'react';\nimport {COST_CREATE_PAGE_URL, COST_EDIT_PAGE_URL} from \"../../configuration/application-urls\";\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport CashFlowListPage from \"../shared/crud/CashFlowListPage\";\n\nconst service = applicationContext.costService;\n\nconst CostListPage = () => {\n    return <CashFlowListPage service={service} title=\"All costs\" createPageUrl={COST_CREATE_PAGE_URL} editPageUrl={COST_EDIT_PAGE_URL}/>;\n};\n\nexport default CostListPage;\n","import React, {Component} from 'react';\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport {withRouter} from \"react-router-dom\";\nimport CashFlowCreatePage from \"../shared/crud/CashFlowCreatePage\";\nimport {COST} from \"../../configuration/validation-schemas\";\nimport {COST_EDIT_PAGE_URL, COST_PAGE_URL} from \"../../configuration/application-urls\";\n\nconst service = applicationContext.costService;\n\n@withRouter\nclass CostCreatePage extends Component {\n    render() {\n        return <CashFlowCreatePage title=\"Add a cost\" service={service} validationSchema={COST} listUrl={COST_PAGE_URL} editUrl={COST_EDIT_PAGE_URL}/>\n    }\n}\n\nexport default CostCreatePage;\n","import React, {Component} from 'react';\nimport {applicationContext} from \"../../service/ApplicationContext\";\nimport CashFlowEditPage from \"../shared/crud/CashFlowEditPage\";\nimport {COST} from \"../../configuration/validation-schemas\";\nimport {COST_CREATE_PAGE_URL, COST_PAGE_URL} from \"../../configuration/application-urls\";\n\nconst service = applicationContext.costService;\n\nclass CostEditPage extends Component {\n    render() {\n        return <CashFlowEditPage service={service} titlePrefix=\"Cost\" validationSchema={COST} listUrl={COST_PAGE_URL} createUrl={COST_CREATE_PAGE_URL}/>;\n    }\n}\n\nexport default CostEditPage;\n","import React, {Component} from 'react';\nimport {createMuiTheme, CssBaseline, responsiveFontSizes} from \"@material-ui/core\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {\n    COST_CREATE_PAGE_URL,\n    COST_EDIT_PAGE_URL,\n    COST_PAGE_URL,\n    DASHBOARD_PAGE_URL,\n    DEFAULT_PAGE_URL,\n    HOMEPAGE_URL,\n    INCOME_CREATE_PAGE_URL,\n    INCOME_EDIT_PAGE_URL,\n    INCOME_PAGE_URL\n} from \"../configuration/application-urls\";\nimport {observer} from \"mobx-react\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport DashboardPage from \"./DashboardPage\";\nimport IncomeListPage from \"./income/IncomeListPage\";\nimport IncomeCreatePage from \"./income/IncomeCreatePage\";\nimport IncomeEditPage from \"./income/IncomeEditPage\";\nimport SnackbarsContainer from \"./ui/SnackbarsContainer\";\nimport ConfirmationDialogsContainer from \"./ui/ConfirmationDialogsContainer\";\nimport CostListPage from \"./cost/CostListPage\";\nimport CostCreatePage from \"./cost/CostCreatePage\";\nimport CostEditPage from \"./cost/CostEditPage\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport {deepOrange} from \"@material-ui/core/colors\";\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: deepOrange,\n    },\n    overrides: {\n        MuiFormControl: {\n            root: {\n                display: \"flex\"\n            }\n        }\n    }\n});\ntheme = responsiveFontSizes(theme);\n\n@observer\nclass Application extends Component {\n    render() {\n        return <ThemeProvider theme={theme}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <CssBaseline/>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path={HOMEPAGE_URL}>\n                            <Redirect to={DEFAULT_PAGE_URL}/>\n                        </Route>\n                        <Route exact path={DASHBOARD_PAGE_URL} component={DashboardPage}/>\n\n                        <Route exact path={INCOME_PAGE_URL} component={IncomeListPage}/>\n                        <Route exact path={INCOME_CREATE_PAGE_URL} component={IncomeCreatePage}/>\n                        <Route exact path={INCOME_EDIT_PAGE_URL} component={IncomeEditPage}/>\n\n                        <Route exact path={COST_PAGE_URL} component={CostListPage}/>\n                        <Route exact path={COST_CREATE_PAGE_URL} component={CostCreatePage}/>\n                        <Route exact path={COST_EDIT_PAGE_URL} component={CostEditPage}/>\n                    </Switch>\n                </BrowserRouter>\n                <SnackbarsContainer/>\n                <ConfirmationDialogsContainer/>\n            </MuiPickersUtilsProvider>\n        </ThemeProvider>;\n    }\n}\n\nexport default Application;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './component/Application';\nimport {configure} from \"mobx\";\n\nconfigure({\n    enforceActions: \"always\"\n});\n\nReactDOM.render(<Application/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}